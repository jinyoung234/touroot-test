name: 'frontend-cd'

on:
  workflow_run:
    workflows: ['frontend-ci']
    types:
      - completed
defaults:
  run:
    working-directory: frontend
jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    steps:
      - name: 레포지토리로 이동
        uses: actions/checkout@v4

      - name: node 버전 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.1'

      - name: 환경변수 설정
        run: |
          echo "REACT_APP_BASE_URL=$BASE_URL" >> .env.development
          echo "REACT_APP_GOOGLE_MAP_API_KEY=$GOOGLE_MAP_API_KEY" >> .env.development
        env:
          BASE_URL: ${{secrets.APP_BASE_URL}}
          GOOGLE_MAP_API_KEY: ${{secrets.GOOGLE_MAP_API_KEY}}

      - name: 의존성 캐싱
        id: cache
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: 의존성 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: ✨ 빌드
        run: yarn build

      - name: Upload frontend build file to artifact
        uses: actions/upload-artifact@v4
        with:
          name: FrontendApplication
          path: frontend/dist

  deploy:
    needs: build-and-upload
    runs-on: self-hosted
    env:
      CLOUD_FRONT_DISTRIBUTION_ID: ${{ secrets.CLOUD_FRONT_DEV_DISTRIBUTION_ID}}
    steps:
      - name: Remove previous version app
        working-directory: frontend/dev/
        run: rm -rf dist

      - name: Download build file from artifact
        uses: actions/download-artifact@v4
        with:
          name: FrontendApplication
          path: frontend/dev/dist

      - name: Deploy DEV frontend
        working-directory: frontend/dev/
        run: |
          rm -f /home/ubuntu/team-by-team/frontend/backup/*
          mv /home/ubuntu/team-by-team/frontend/www/dist/* /home/ubuntu/team-by-team/frontend/backup/
          mv ./dist/* /home/ubuntu/team-by-team/frontend/www/dist/
          aws s3 sync /home/ubuntu/team-by-team/frontend/www/dist/ s3://team-by-team-static-resource/dev/front --delete
          aws cloudfront create-invalidation --distribution-id "$CLOUD_FRONT_DISTRIBUTION_ID" --paths "/*"
